clean_failed <- failure_aggregation()
clean_failed <- failure_aggregation()
only_failed$Failure_Reason <- gsub("ms n", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms NOT Okay"
only_failed$Failure_Reason <- gsub("ms o", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms Okay"
only_failed$Failure_Reason <- gsub("low y", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Low Yield"
only_failed$Failure_Reason <- gsub("base", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Base-swap"
only_failed$Failure_Reason <- gsub("wrong m", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Wrong Mass"
only_failed$Failure_Reason <- gsub("flush", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Flushed"
only_failed$Failure_Reason <- gsub("3 stel", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "More than 3 stellaris failures"
only_failed$Failure_Reason <- gsub("extra tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra TET coupled"
only_failed$Failure_Reason <- gsub("tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor TET"
only_failed$Failure_Reason <- gsub("extra fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra FAM coupled"
only_failed$Failure_Reason <- gsub("fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor FAM"
View(only_failed)
only_failed <- not_failed()
View(only_failed)
clean_failed <- failure_aggregation()
View(only_failed)
clean_failed <- failure_aggregation()
only_failed
only_failed$Failure_Reason <- gsub("ms n", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms NOT Okay"
only_failed$Failure_Reason <- gsub("ms o", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms Okay"
only_failed$Failure_Reason <- gsub("low y", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Low Yield"
only_failed$Failure_Reason <- gsub("base", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Base-swap"
only_failed$Failure_Reason <- gsub("wrong m", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Wrong Mass"
only_failed$Failure_Reason <- gsub("flush", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Flushed"
only_failed$Failure_Reason <- gsub("3 stel", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "More than 3 stellaris failures"
only_failed$Failure_Reason <- gsub("extra tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra TET coupled"
only_failed$Failure_Reason <- gsub("tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor TET"
only_failed$Failure_Reason <- gsub("extra fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra FAM coupled"
only_failed$Failure_Reason <- gsub("fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor FAM"
only_failed
only_failed <- not_failed()
failure_aggregation()
View(only_failed)
View(only_failed)
failure_aggregation()
failure_aggregation <- function(){
only_failed$Failure_Reason <- gsub("ms n", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms NOT Okay"
only_failed$Failure_Reason <- gsub("ms o", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Ms Okay"
only_failed$Failure_Reason <- gsub("low y", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Low Yield"
only_failed$Failure_Reason <- gsub("base", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Base-swap"
only_failed$Failure_Reason <- gsub("wrong m", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Wrong Mass"
only_failed$Failure_Reason <- gsub("flush", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Flushed"
only_failed$Failure_Reason <- gsub("3 stel", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "More than 3 stellaris failures"
only_failed$Failure_Reason <- gsub("extra tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra TET coupled"
only_failed$Failure_Reason <- gsub("tet", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor TET"
only_failed$Failure_Reason <- gsub("extra fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Extra FAM coupled"
only_failed$Failure_Reason <- gsub("fam", NA, only_failed$Failure_Reason)
only_failed$Failure_Reason[is.na(only_failed[,1])] <- "Poor FAM"
only_failed
}
failure_aggregation()
clean_failure <- failure_aggregation()
View(clean_failure)
by_Reason <- group_by(sorted, Failure_Reason)
reason_counts <- summarize(by_Reason, number_of_failures = n())
class(reason_counts) <- "data.frame"
class(sorted) <- "data.frame"
sorted <- arrange(clean_failure, Failure_Reason, Three_Prime_mod, Five_Prime_mod)
by_Reason <- group_by(sorted, Failure_Reason)
reason_counts <- summarize(by_Reason, number_of_failures = n())
class(reason_counts) <- "data.frame"
class(sorted) <- "data.frame"
by_reason_mods <- group_by(sorted, Failure_Reason, Five_Prime_mod, Three_Prime_mod)
reason_mod_counts <- summarize(by_reason_mods, failure_per_mod = n())
reason_count_arranged <- arrange(reason_counts, desc(number_of_failures))
date <- Sys.Date()
countedname <- paste("Counted", "for", date, sep=" ")
rawname <- paste("Raw", "for", date, sep=" ")
write.xlsx(reason_count_arranged,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
write.xlsx(sorted,
outputname,
sheetName=rawname,
row.names=FALSE,
append=TRUE)
?mutate
mutate_test <- mutate(by_reason_mods, number_of_failures = n(Failure_Reason))
mutate_test <- mutate(by_reason_mods, number_of_failures = n())
View(mutate_test)
?n()
mutate_test <- mutate(by_reason, number_of_failures = n())
mutate_test <- mutate(by_Reason, number_of_failures = n())
View(mutate_test)
View(by_reason_mods)
View(reason_mod_counts)
failure_list <- select(failure_list, Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod)
failure_list <- mutate(by_Reason, number_of_failures = n())
failure_list <- select(failure_list, Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod)
View(failure_list)
reason_mod_arranged <- arrange(reason_mod_counts, desc(number_of_failures), Five_Prime_mod, Three_Prime_mod)
failure_list <- mutate(by_Reason, number_of_failures = n())
reason_mod_counts <- summarize(by_reason_mods, failure_per_mod = n())
reason_mod_arranged <- arrange(reason_mod_counts, desc(failure_per_mod), Five_Prime_mod, Three_Prime_mod)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
library(dplyr)
library(xlsx)
library(stringr)
source('failurelistfunctions.R')
filename <- readline("What is the file called? Don't forget the extension... ")
filename <- readline("What is the file called? Don't forget the extension... ")
outputname <- readline("What is the output file called?...  ")
outputname <- paste(outputname, ".xlsx", sep="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = "",
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
filename <- everything.tab
filename <- "everything.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = "",
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
#converts to tbl_df to enable advanced data manipulation
raw_tbl_df <- tbl_df(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
clean_failure <- failure_aggregation()
by_Reason <- group_by(clean_failure, Failure_Reason)
reason_counts <- summarize(by_Reason, number_of_failures = n())
reason_count_arranged <- arrange(reason_counts, desc(number_of_failures))
by_reason_mods <- group_by(clean_failure, Failure_Reason, Five_Prime_mod, Three_Prime_mod)
reason_mod_counts <- summarize(by_reason_mods, failure_per_mod = n())
reason_mod_arranged <- arrange(reason_mod_counts, desc(failure_per_mod), Five_Prime_mod, Three_Prime_mod)
View(reason_mod_arranged)
by_reason_mods <- group_by(clean_failure, Five_Prime_mod, Three_Prime_mod)
reason_mod_counts <- summarize(by_reason_mods, failure_per_mod = n())
reason_mod_arranged <- arrange(reason_mod_counts, desc(failure_per_mod), Five_Prime_mod, Three_Prime_mod)
View(reason_mod_arranged)
date <- Sys.Date()
countedname <- paste("Counted", "for", date, sep=" ")
listname <- paste("Raw", "for", date, sep=" ")
class(reason_counts) <- "data.frame"
class(sorted) <- "data.frame"
write.xlsx(reason_count_arranged,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
View(reason_count_arranged)
failure_list <- mutate(by_Reason, number_of_failures = n())
failure_list <- select(failure_list, Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod)
View(failure_list)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures))
View(reason_count_arranged)
View(reason_counts)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
arrange(desc(failure_per_mod), Five_Prime_mod, Three_Prime_mod)
View(mod_reason_counts)
failure_list <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
arrange(desc(failure_per_mod), Five_Prime_mod, Three_Prime_mod)
View(failure_list)
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason)
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n())
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason)
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n())
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason)
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason)
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason)
?Sys.Date
Sys.Date
Sys.Date()
class(Sys.Date())
Sys.Date(%a)
Sys.Date("%a")
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
arrange(desc(number_of_failures), Failure_Reason) %>%
class() <- "data.frame"
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
arrange(desc(failure_per_mod))
View(mod_reason_counts)
?arrange
class(mod_reason_counts) <- "data.frame"
arrange(mod_reason_counts, desc(failure_per_mod))
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
View(mod_reason_counts)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
View(mod_reason_counts)
source('~/.active-rstudio-document')
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
group_by() %>%
arrange(desc(number_of_failures), Failure_Reason)
View(failure_list)
failure_list <-
clean_failure %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
group_by() %>%
arrange(Failure_Reason, desc(number_of_failures))
View(failure_list)
failure_list <-
only_failed %>%
group_by(Failure_Reason) %>%
mutate(number_of_failures = n()) %>%
select(Failure_Reason, number_of_failures, Five_Prime_mod, Three_Prime_mod) %>%
group_by() %>%
arrange(Failure_Reason, desc(number_of_failures))
View(failure_list)
failure_list <-
only_failed %>%
arrange(Failure_Reason)
View(failure_list)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
?gsub
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
?grep
grep("", only_failed$Failure_Reason)
grep("", only_failed$Failure_Reason, fixed=TRUE)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
?rowSums
sum(raw_tbl_df[1,1])
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
sum(raw_tbl_df[1,1])
?na.strings = ""
?read.table
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
View(rawdata)
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c(""),
quote="")
View(rawdata)
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
clean_failure <- failure_aggregation()
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
failure_list <-
only_failed %>%
arrange(Failure_Reason)
date <- Sys.Date()
countedname <- paste("Reason Counts for", date, sep=" ")
modname <- paste("Mod Counts for", date, sep=" ")
listname <- paste("Failure list for", date, sep=" ")
class(reason_counts) <- "data.frame"
class(mod_reason_counts) <- "data.frame"
class(failure_list) <- "data.frame"
write.xlsx(reason_counts,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
write.xlsx(mod_reason_counts,
file=outputname,
sheetName=modname,
row.names=FALSE,
append=TRUE)
View(reason_counts)
reason_counts[23,1]
greb("\v", reason_counts$Failure_Reason)
grep("\v", reason_counts$Failure_Reason)
grep("\v", raw_tbl_df$Failure_Reason)
grep("\v", only_failed$Failure_Reason)
grep("\v", clean_failure$Failure_Reason)
grep("\v", mod_reason_counts$failure_per_mod)
grep("\v", failure_list$Failure_Reason)
grep("\v", reason_counts$Failure_Reason)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)%>%
gsub("\v", NA)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
failure_list[1,1]
filter(reason_counts, !is.na(Failure_Reason))
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
rm(clean_failure)
failure_list <-
only_failed %>%
arrange(Failure_Reason)
date <- Sys.Date()
countedname <- paste("Reason Counts for", date, sep=" ")
modname <- paste("Mod Counts for", date, sep=" ")
listname <- paste("Failure list for", date, sep=" ")
class(reason_counts) <- "data.frame"
class(mod_reason_counts) <- "data.frame"
class(failure_list) <- "data.frame"
write.xlsx(reason_counts,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
write.xlsx(mod_reason_counts,
file=outputname,
sheetName=modname,
row.names=FALSE,
append=TRUE)
write.xlsx(failure_list,
outputname,
sheetName=listname,
row.names=FALSE,
append=TRUE)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
