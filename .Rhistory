na.strings = c("", " "),
quote="")
View(rawdata)
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c(""),
quote="")
View(rawdata)
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
clean_failure <- failure_aggregation()
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
failure_list <-
only_failed %>%
arrange(Failure_Reason)
date <- Sys.Date()
countedname <- paste("Reason Counts for", date, sep=" ")
modname <- paste("Mod Counts for", date, sep=" ")
listname <- paste("Failure list for", date, sep=" ")
class(reason_counts) <- "data.frame"
class(mod_reason_counts) <- "data.frame"
class(failure_list) <- "data.frame"
write.xlsx(reason_counts,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
write.xlsx(mod_reason_counts,
file=outputname,
sheetName=modname,
row.names=FALSE,
append=TRUE)
View(reason_counts)
reason_counts[23,1]
greb("\v", reason_counts$Failure_Reason)
grep("\v", reason_counts$Failure_Reason)
grep("\v", raw_tbl_df$Failure_Reason)
grep("\v", only_failed$Failure_Reason)
grep("\v", clean_failure$Failure_Reason)
grep("\v", mod_reason_counts$failure_per_mod)
grep("\v", failure_list$Failure_Reason)
grep("\v", reason_counts$Failure_Reason)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)%>%
gsub("\v", NA)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
failure_list[1,1]
filter(reason_counts, !is.na(Failure_Reason))
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
rm(clean_failure)
failure_list <-
only_failed %>%
arrange(Failure_Reason)
date <- Sys.Date()
countedname <- paste("Reason Counts for", date, sep=" ")
modname <- paste("Mod Counts for", date, sep=" ")
listname <- paste("Failure list for", date, sep=" ")
class(reason_counts) <- "data.frame"
class(mod_reason_counts) <- "data.frame"
class(failure_list) <- "data.frame"
write.xlsx(reason_counts,
file=outputname,
sheetName=countedname,
row.names=FALSE,
append=FALSE)
write.xlsx(mod_reason_counts,
file=outputname,
sheetName=modname,
row.names=FALSE,
append=TRUE)
write.xlsx(failure_list,
outputname,
sheetName=listname,
row.names=FALSE,
append=TRUE)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/allwnotes.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/allwnotes.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
filename <- everything.tab
filename <- "everything.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
seq_num <- nrow(raw_tbl_df)
class(seq_num)
raw_tbl_df <- tbl_df(rawdata)
seq_num <- nrow(raw_tbl_df)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
not_failed <- nrow(only_failed)
raw_tbl_df <- tbl_df(rawdata)
seq_num <- nrow(raw_tbl_df)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
not_failed <- nrow(only_failed)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
raw_tbl_df <- tbl_df(rawdata)
seq_num <- nrow(raw_tbl_df)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
not_failed <- nrow(only_failed)
not_failed <- nrow(only_failed)
seq_amount <- nrow(raw_tbl_df)
failed_amount<- nrow(only_failed)
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
print("Total number of sequences analyzed:", seq_amount)
print("Total number of sequences analyzed:", seq_amount)
print("Total number of sequences analyzed:", seq_amount)
print("Total number of sequences analyzed:", seq_amount)
print("Total number of sequences analyzed:", seq_amount)
rm(list=ls())
?print
print("total")
filename <- readline("What is the data file called? Don't forget the extension... ")
filename <- febdata.tab
filename <- "febdata.tab"
outputname <- readline("What is the output file called?...  ")
outputname <- paste(outputname, ".xlsx", sep="")
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
rm(rawdata)
raw_tbl_df <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
rm(clean_failure)
failure_list <-
only_failed %>%
arrange(Failure_Reason)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
rm(rawdata)
raw_tbl_df <- clean_up()
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
raw_tbl_df <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
mod_reason_counts <-
clean_failure %>%
group_by(Five_Prime_mod, Three_Prime_mod) %>%
summarize(failure_per_mod = n()) %>%
group_by() %>%
arrange(desc(failure_per_mod))
failure_list <-
rm(clean_failure)
only_failed %>%
arrange(Failure_Reason)
failure_list <-
only_failed %>%
arrange(Failure_Reason)
print("Total number of sequences analyzed:")
print(seq_amount)
print("Total number of failures found:")
print(failed_amount)
print(failed_amount/seq_amount*100)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
filename <- lastyear.tab
filename <- "lastyear.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence")
raw_tbl_df <- tbl_df(rawdata)
raw_tbl_df <- tbl_df(rawdata)
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
not_passed <- filter(raw_tbl_df, !is.na(Failure_Reason))
not_passed_amount <- nrow(not_passed)
rm(rawdata)
not_passed <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
seq_amount <- nrow(raw_tbl_df)
not_passed <- filter(raw_tbl_df, !is.na(Failure_Reason))
not_passed_amount <- nrow(not_passed)
rm(rawdata)
not_passed <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
print("Percent Not Passed")
print(not_passed/seq_amount*100)
print("Percent failure:")
print(failed_amount/seq_amount*100)
print("Percent Not Passed")
print(not_passed_amount/seq_amount*100)
print("Percent Not Passed")
print(not_passed_amount/seq_amount*100)
source('~/.active-rstudio-document')
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistwfunctions.R')
filename <- febdata.tab
filename <- "febdata.tab"
filename <- "febdataID.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence",
"sequence_ID")
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
not_passed <- filter(raw_tbl_df, !is.na(Failure_Reason))
not_passed_amount <- nrow(not_passed)
rm(rawdata)
not_passed <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
source('C:/Users/cferguson/Desktop/biosearch_projects/failurelistfunctions.R')
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence",
"sequence_ID")
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
not_passed <- filter(raw_tbl_df, !is.na(Failure_Reason))
not_passed_amount <- nrow(not_passed)
rm(rawdata)
not_passed <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
filename <- "febdatawID.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence",
"sequence_ID")
raw_tbl_df <- tbl_df(rawdata)
seq_amount <- nrow(raw_tbl_df)
not_passed <- filter(raw_tbl_df, !is.na(Failure_Reason))
not_passed_amount <- nrow(not_passed)
rm(rawdata)
not_passed <- clean_up()
only_failed <- not_failed()
failed_amount<- nrow(only_failed)
rm(raw_tbl_df)
clean_failure <- failure_aggregation()
aggr_failures <- nrow(clean_failure)
reason_counts <-
clean_failure %>%
group_by(Failure_Reason) %>%
summarize(number_of_failures = n()) %>%
arrange(desc(number_of_failures), Failure_Reason)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID, Failure_Reason) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
seqID_counts <-
clean_failure %>%
group_by(Failure_Reason, sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
View(seqID_counts)
?merge
merged <- merge(seqID_counts, clean_failure, by="sequence_ID")
View(merged)
seqID_counts <-
clean_failure %>%
group_by(sequence_ID, Failure_Reason) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
?unique
unique(seqID_counts$sequence_ID)
unique(seqID_counts$sequence_ID) -> seqID_counts$sequence_ID
seqID_counts <-
clean_failure %>%
group_by(sequence_ID) %>%
summarize(number_of_failures_by_ID = n()) %>%
arrange(desc(number_of_failures_by_ID))
View(seqID_counts)
filename <- "lastyear.tab"
rawdata <- read.table(filename,
sep="\t",
stringsAsFactors=FALSE,
na.strings = c("", " "),
quote="")
colnames(rawdata) <- c("Failure_Reason",
"Five_Prime_mod",
"Three_Prime_mod",
"sequence",
"sequence_ID")
